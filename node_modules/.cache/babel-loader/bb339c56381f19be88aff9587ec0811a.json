{"ast":null,"code":"var _jsxFileName = \"/Users/awoodrow/React Projects/robofriends/src/App.js\";\nimport React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\nimport \"./App.css\"; //Needs to be a class and extend Component when dealing with state\n//in a non-state component you just return something\n//in a stateful component you render something\n//any component using state has the class syntax\n//what we call a smart component since it uses state\n\nclass App extends Component {\n  constructor() {\n    super(); //calls the constructor of component\n\n    this.onSearchChange = event => {\n      //anytime you make your own methods on a component use arrow function\n      //without the arrow function this would refer to the input where the event takes place\n      //makes sure the this value refers to where it was created; App in this case\n      //with the event we always have event.target.value\n      console.log(event.target.value); //this is how we set state\n\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      //two states: robots and searchfield\n      robots: robots,\n      searchfield: ''\n    }; //these are the things that can change within our app\n    //usually live in the parent component\n    //state is passed down as props to components\n    //the state is passed down as props to CardList\n  }\n\n  componentDidMount() {}\n\n  //anytime input changes we set the state of where the event was triggered\n  //which is SearchBox.js input\n  //always has a render function that has to return something\n  //you have to use this.onSearchChange since this is an object\n  render() {\n    //these components that are just pure functions can just render\n    //we use the filter function to iterate over robots array which is in state\n    //return all robots that match SearchBox input which is in this.state.searchfield\n    //filter robot state to include what's in the searchfield\n    //and we pass filtered robots instead\n    //is an array\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    }); //everytime there is an onChange on the input of SearchBox it let's the App.js know to run the onSearchChange function\n    //then updates the state of the searchfield to whatever we typed\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/awoodrow/React Projects/robofriends/src/App.js"],"names":["React","Component","CardList","robots","SearchBox","App","constructor","onSearchChange","event","console","log","target","value","setState","searchfield","state","componentDidMount","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAG;AACV,YADU,CACF;;AADE,SAiBdC,cAjBc,GAiBIC,KAAD,IAAW;AACxB;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EALwB,CAMxB;;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACH,KAzBa;;AAEV,SAAKG,KAAL,GAAa;AACT;AACIZ,MAAAA,MAAM,EAAEA,MAFH;AAGLW,MAAAA,WAAW,EAAE;AAHR,KAAb,CAFU,CAOV;AACA;AACA;AACA;AACH;;AAEDE,EAAAA,iBAAiB,GAAG,CAEnB;;AAWD;AACA;AAEA;AACA;AACAC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,cAAc,GAAG,KAAKH,KAAL,CAAWZ,MAAX,CAAkBgB,MAAlB,CAAyBC,KAAK,IAAE;AACnD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKR,KAAL,CAAWD,WAAX,CAAuBQ,WAAvB,EAAlC,CAAP;AACH,KAFsB,CAAvB,CAPK,CAUL;AACA;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKf,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEW,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAnDuB;;AAsD5B,eAAeb,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport CardList from \"./CardList\";\nimport {robots} from \"./robots\";\nimport SearchBox from \"./SearchBox\";\nimport \"./App.css\"\n\n//Needs to be a class and extend Component when dealing with state\n//in a non-state component you just return something\n//in a stateful component you render something\n//any component using state has the class syntax\n//what we call a smart component since it uses state\nclass App extends Component {\n    constructor() {\n        super();//calls the constructor of component\n        this.state = {\n            //two states: robots and searchfield\n                robots: robots,\n                searchfield: ''\n        }\n        //these are the things that can change within our app\n        //usually live in the parent component\n        //state is passed down as props to components\n        //the state is passed down as props to CardList\n    }\n\n    componentDidMount() {\n        \n    }\n\n    onSearchChange = (event) => {\n        //anytime you make your own methods on a component use arrow function\n        //without the arrow function this would refer to the input where the event takes place\n        //makes sure the this value refers to where it was created; App in this case\n        //with the event we always have event.target.value\n        console.log(event.target.value);\n        //this is how we set state\n        this.setState({searchfield: event.target.value});\n    };\n    //anytime input changes we set the state of where the event was triggered\n    //which is SearchBox.js input\n\n    //always has a render function that has to return something\n    //you have to use this.onSearchChange since this is an object\n    render() {\n        //these components that are just pure functions can just render\n        //we use the filter function to iterate over robots array which is in state\n        //return all robots that match SearchBox input which is in this.state.searchfield\n        //filter robot state to include what's in the searchfield\n        //and we pass filtered robots instead\n        //is an array\n        const filteredRobots = this.state.robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        });\n        //everytime there is an onChange on the input of SearchBox it let's the App.js know to run the onSearchChange function\n        //then updates the state of the searchfield to whatever we typed\n        return (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <CardList robots={filteredRobots}/>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}